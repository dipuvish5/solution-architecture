name: Java CI with Maven and Docker Compose

on:
  push:
    branches: [ "cicd-java-workflow" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        java: [ '21' ]
        os: [ 'ubuntu-24.04' ]
        
    name: Java ${{ matrix.java }} (${{ matrix.os }}) sample
    steps:
      - uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml

  push_to_registry:
    name: Push Docker images using Docker Compose
    needs: build  # Ensure the Java build is complete before Docker Compose
    runs-on: ubuntu-24.04
    environment: PROD
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Check if DOCKER_USERNAME secret is set
        run: |
          if [ -z "${{ secrets.DOCKER_USERNAME }}" ]; then
            echo "DOCKER_USERNAME is not set!"
            exit 1
          else
            echo "DOCKER_USERNAME is set."
          fi

      - name: Check if DOCKER_PASSWORD secret is set
        run: |
          if [ -z "${{ secrets.DOCKER_PASSWORD }}" ]; then
            echo "DOCKER_PASSWORD is not set!"
            exit 1
          else
            echo "DOCKER_PASSWORD is set."
          fi

      # Log in to Docker Hub using Docker Hub credentials stored in GitHub secrets
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          ecr: false  # Explicitly disable ECR auto-login

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Check Docker and Docker Compose version
        run: |
          docker --version
          docker-compose --version

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/solution-architecture  # Replace with your Docker Hub repo

      # Build and push Docker images using Docker Compose
      - name: Build and push images
        run: |
          docker-compose -f docker-compose.yml build   # Build all services defined in docker-compose.yml
          docker-compose -f docker-compose.yml push    # Push all services to Docker Hub

      # Optional: Attest the Docker image build
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ secrets.DOCKER_USERNAME }}/solution-architecture  # Replace with your repo details
          subject-digest: ${{ steps.meta.outputs.digest }}
          push-to-registry: true
